{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clement\\\\Desktop\\\\Programming\\\\Projects\\\\Web\\\\moviedb\\\\src\\\\context\\\\movie_context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\nimport reducer from \"../reducer/movie_reducer\";\nimport { FETCH_TRENDING_MOVIE, FETCH_POPULAR_MOVIE, FETCH_TOP_RATED_MOVIE, FETCH_UPCOMING_MOVIE, FETCH_MOVIE_GENRE, FETCH_MOVIE_CERTIFICATIONS, FETCH_FILTER } from \"../constants/action\";\nimport popular_movie_data from \"../data/popular_movie_data\";\nimport genre_data from \"../data/genre_data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieContext = /*#__PURE__*/React.createContext();\nconst API_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"d60f4e8797f13dd4c61d8414708bb669\";\nconst initialState = {\n  moviesArr: [{\n    category: \"Trending\",\n    keyword: \"/trending/movie/day\",\n    action: FETCH_TRENDING_MOVIE,\n    movies: popular_movie_data.results\n  }, {\n    category: \"Popular\",\n    keyword: \"/movie/popular\",\n    action: FETCH_POPULAR_MOVIE,\n    movies: popular_movie_data.results\n  }, {\n    category: \"Top Rated\",\n    keyword: \"/movie/top_rated\",\n    action: FETCH_TOP_RATED_MOVIE,\n    movies: popular_movie_data.results\n  }, {\n    category: \"Upcoming\",\n    keyword: \"/movie/upcoming\",\n    action: FETCH_UPCOMING_MOVIE,\n    movies: popular_movie_data.results\n  }],\n  // {id,name}\n  genres: [],\n  certifications: [],\n  display_movies: []\n};\nexport const MovieProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const fetchMovie = async (action, url) => {\n    try {\n      // const response = await axios.get(url);\n      // const movies = response.data.results;\n      const movies = popular_movie_data.results;\n      dispatch({\n        type: action,\n        payload: movies\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fetchAPI = async (action, url) => {\n    try {\n      const response = await axios.get(url);\n      dispatch({\n        type: action,\n        payload: response\n      });\n    } catch (error) {}\n  };\n\n  const fetchGenre = async () => {\n    try {\n      const url = `https://api.themoviedb.org/3/genre/movie/list?api_key=${state.api_key}&language=en-US`; // const response = await axios.get(url);\n      // const genres = response.data.genres;\n\n      const genres = genre_data.genres; //console.log(genres);\n\n      dispatch({\n        type: FETCH_MOVIE_GENRE,\n        payload: genres\n      });\n    } catch (error) {}\n  };\n\n  const fetchCertifications = async () => {\n    try {\n      const url = `https://api.themoviedb.org/3/certification/movie/list?api_key=${state.api_key}`;\n      const response = await axios.get(url);\n      console.log(response);\n      const certifications = response.data.certifications.US;\n      dispatch({\n        type: FETCH_MOVIE_CERTIFICATIONS,\n        payload: certifications\n      });\n    } catch (error) {}\n  };\n\n  const fetchFilter = async url => {\n    try {\n      // const response = await axios.get(url);\n      // const temp_display_movies = response.data.results;\n      const temp_display_movies = popular_movie_data.results;\n      dispatch({\n        type: FETCH_FILTER,\n        payload: temp_display_movies\n      });\n    } catch (error) {}\n  }; // Fetch Home Page Content\n  // i.e. The 4 categories\n\n\n  useEffect(() => {\n    const tempMoviesArr = state.moviesArr;\n    tempMoviesArr.forEach(item => {\n      const action = item.action;\n      const url = `${state.api_url}${item.keyword}?api_key=${state.api_key}&language=en-US&page=1`;\n      fetchMovie(action, url);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MovieContext.Provider, {\n    value: { ...state,\n      fetchGenre,\n      fetchCertifications,\n      fetchFilter\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = MovieProvider;\nexport const useMovieContext = () => {\n  _s2();\n\n  return useContext(MovieContext);\n};\n\n_s2(useMovieContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieProvider\");","map":{"version":3,"sources":["C:/Users/clement/Desktop/Programming/Projects/Web/moviedb/src/context/movie_context.js"],"names":["React","useContext","useReducer","useEffect","axios","reducer","FETCH_TRENDING_MOVIE","FETCH_POPULAR_MOVIE","FETCH_TOP_RATED_MOVIE","FETCH_UPCOMING_MOVIE","FETCH_MOVIE_GENRE","FETCH_MOVIE_CERTIFICATIONS","FETCH_FILTER","popular_movie_data","genre_data","MovieContext","createContext","API_URL","API_KEY","initialState","moviesArr","category","keyword","action","movies","results","genres","certifications","display_movies","MovieProvider","children","state","dispatch","fetchMovie","url","type","payload","error","console","log","fetchAPI","response","get","fetchGenre","api_key","fetchCertifications","data","US","fetchFilter","temp_display_movies","tempMoviesArr","forEach","item","api_url","useMovieContext"],"mappings":"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","sourcesContent":["import React, { useContext, useReducer, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducer/movie_reducer\";\r\nimport {\r\n  FETCH_TRENDING_MOVIE,\r\n  FETCH_POPULAR_MOVIE,\r\n  FETCH_TOP_RATED_MOVIE,\r\n  FETCH_UPCOMING_MOVIE,\r\n  FETCH_MOVIE_GENRE,\r\n  FETCH_MOVIE_CERTIFICATIONS,\r\n  FETCH_FILTER,\r\n} from \"../constants/action\";\r\nimport popular_movie_data from \"../data/popular_movie_data\";\r\nimport genre_data from \"../data/genre_data\";\r\n\r\nconst MovieContext = React.createContext();\r\nconst API_URL = \"https://api.themoviedb.org/3\";\r\nconst API_KEY = \"d60f4e8797f13dd4c61d8414708bb669\";\r\n\r\nconst initialState = {\r\n  moviesArr: [\r\n    {\r\n      category: \"Trending\",\r\n      keyword: \"/trending/movie/day\",\r\n      action: FETCH_TRENDING_MOVIE,\r\n      movies: popular_movie_data.results,\r\n    },\r\n    {\r\n      category: \"Popular\",\r\n      keyword: \"/movie/popular\",\r\n      action: FETCH_POPULAR_MOVIE,\r\n      movies: popular_movie_data.results,\r\n    },\r\n    {\r\n      category: \"Top Rated\",\r\n      keyword: \"/movie/top_rated\",\r\n      action: FETCH_TOP_RATED_MOVIE,\r\n      movies: popular_movie_data.results,\r\n    },\r\n    {\r\n      category: \"Upcoming\",\r\n      keyword: \"/movie/upcoming\",\r\n      action: FETCH_UPCOMING_MOVIE,\r\n      movies: popular_movie_data.results,\r\n    },\r\n  ],\r\n  // {id,name}\r\n  genres: [],\r\n  certifications: [],\r\n  display_movies: [],\r\n};\r\n\r\nexport const MovieProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const fetchMovie = async (action, url) => {\r\n    try {\r\n      // const response = await axios.get(url);\r\n      // const movies = response.data.results;\r\n      const movies = popular_movie_data.results;\r\n      dispatch({ type: action, payload: movies });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const fetchAPI = async (action, url) => {\r\n    try {\r\n      const response = await axios.get(url);\r\n      dispatch({ type: action, payload: response });\r\n    } catch (error) {}\r\n  };\r\n\r\n  const fetchGenre = async () => {\r\n    try {\r\n      const url = `https://api.themoviedb.org/3/genre/movie/list?api_key=${state.api_key}&language=en-US`;\r\n      // const response = await axios.get(url);\r\n      // const genres = response.data.genres;\r\n      const genres = genre_data.genres;\r\n      //console.log(genres);\r\n      dispatch({ type: FETCH_MOVIE_GENRE, payload: genres });\r\n    } catch (error) {}\r\n  };\r\n\r\n  const fetchCertifications = async () => {\r\n    try {\r\n      const url = `https://api.themoviedb.org/3/certification/movie/list?api_key=${state.api_key}`;\r\n      const response = await axios.get(url);\r\n      console.log(response);\r\n      const certifications = response.data.certifications.US;\r\n      dispatch({ type: FETCH_MOVIE_CERTIFICATIONS, payload: certifications });\r\n    } catch (error) {}\r\n  };\r\n\r\n  const fetchFilter = async (url) => {\r\n    try {\r\n      // const response = await axios.get(url);\r\n      // const temp_display_movies = response.data.results;\r\n      const temp_display_movies = popular_movie_data.results;\r\n      dispatch({ type: FETCH_FILTER, payload: temp_display_movies });\r\n    } catch (error) {}\r\n  };\r\n\r\n  // Fetch Home Page Content\r\n  // i.e. The 4 categories\r\n  useEffect(() => {\r\n    const tempMoviesArr = state.moviesArr;\r\n    tempMoviesArr.forEach((item) => {\r\n      const action = item.action;\r\n      const url = `${state.api_url}${item.keyword}?api_key=${state.api_key}&language=en-US&page=1`;\r\n      fetchMovie(action, url);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <MovieContext.Provider\r\n      value={{ ...state, fetchGenre, fetchCertifications, fetchFilter }}\r\n    >\r\n      {children}\r\n    </MovieContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useMovieContext = () => {\r\n  return useContext(MovieContext);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}