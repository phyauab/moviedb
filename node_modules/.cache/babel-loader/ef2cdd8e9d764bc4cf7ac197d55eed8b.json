{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clement\\\\Desktop\\\\Programming\\\\Projects\\\\Web\\\\moviedb\\\\src\\\\context\\\\movie_context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\nimport reducer from \"../reducer/movie_reducer\";\nimport { FETCH_TRENDING_MOVIE, FETCH_POPULAR_MOVIE, FETCH_TOP_RATED_MOVIE, FETCH_UPCOMING_MOVIE, FETCH_MOVIE_GENRE, FETCH_MOVIE_CERTIFICATIONS, FETCH_FILTER } from \"../constants/action\";\nimport popular_movie_data from \"../data/popular_movie_data\";\nimport genre_data from \"../data/genre_data\";\nimport certifications_data from \"../data/certifications_data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieContext = /*#__PURE__*/React.createContext();\nconst API_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"d60f4e8797f13dd4c61d8414708bb669\";\nconst initialState = {\n  movieCategories: [{\n    category: \"Trending\",\n    keyword: \"/trending/movie/day\",\n    action: FETCH_TRENDING_MOVIE,\n    movies: popular_movie_data.results\n  }, {\n    category: \"Popular\",\n    keyword: \"/movie/popular\",\n    action: FETCH_POPULAR_MOVIE,\n    movies: popular_movie_data.results\n  }, {\n    category: \"Top Rated\",\n    keyword: \"/movie/top_rated\",\n    action: FETCH_TOP_RATED_MOVIE,\n    movies: popular_movie_data.results\n  }, {\n    category: \"Upcoming\",\n    keyword: \"/movie/upcoming\",\n    action: FETCH_UPCOMING_MOVIE,\n    movies: popular_movie_data.results\n  }],\n  // {id,name}\n  genres: genre_data.genres,\n  certifications: certifications_data.certifications.US,\n  displayMovies: []\n};\nexport const MovieProvider = ({\n  children\n}) => {\n  _s();\n\n  console.log(genre_data.genres);\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const fetchAPI = async (action, url) => {\n    try {\n      const response = await axios.get(url);\n      dispatch({\n        type: action,\n        payload: response\n      });\n    } catch (error) {}\n  };\n\n  const fetchFilter2 = async () => {\n    // https://api.themoviedb.org/3/genre/movie/list?api_key=<<api_key>>&language=en-US\n    const urlGenres = `${API_URL}/genre/movie/list?api_key=${API_KEY}&language=en-US`; // https://api.themoviedb.org/3/certification/movie/list?api_key=<<api_key>>\n\n    const urlCertifications = `${API_URL}/certification/movie/list?api_key=${API_KEY}`;\n    fetchAPI(FETCH_MOVIE_GENRE, urlGenres);\n    fetchAPI(FETCH_MOVIE_CERTIFICATIONS, urlCertifications);\n  };\n\n  const fetchCertifications = async () => {\n    try {\n      const url = `https://api.themoviedb.org/3/certification/movie/list?api_key=${state.api_key}`;\n      const response = await axios.get(url);\n      console.log(response);\n      const certifications = response.data.certifications.US;\n      dispatch({\n        type: FETCH_MOVIE_CERTIFICATIONS,\n        payload: certifications\n      });\n    } catch (error) {}\n  };\n\n  const fetchFilter = async url => {\n    try {\n      // const response = await axios.get(url);\n      // const temp_display_movies = response.data.results;\n      const temp_display_movies = popular_movie_data.results;\n      dispatch({\n        type: FETCH_FILTER,\n        payload: temp_display_movies\n      });\n    } catch (error) {}\n  }; // Fetch Home Page Content\n  // i.e. The 4 categories\n\n\n  useEffect(() => {\n    const tempMovieCategories = state.movieCategories;\n    tempMovieCategories.forEach(item => {\n      const action = item.action;\n      const url = `${API_URL}${item.keyword}?api_key=${API_KEY}&language=en-US&page=1`; //fetchAPI(action, url);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MovieContext.Provider, {\n    value: { ...state,\n      fetchFilter2,\n      fetchFilter\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = MovieProvider;\nexport const useMovieContext = () => {\n  _s2();\n\n  return useContext(MovieContext);\n};\n\n_s2(useMovieContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieProvider\");","map":{"version":3,"sources":["C:/Users/clement/Desktop/Programming/Projects/Web/moviedb/src/context/movie_context.js"],"names":["React","useContext","useReducer","useEffect","axios","reducer","FETCH_TRENDING_MOVIE","FETCH_POPULAR_MOVIE","FETCH_TOP_RATED_MOVIE","FETCH_UPCOMING_MOVIE","FETCH_MOVIE_GENRE","FETCH_MOVIE_CERTIFICATIONS","FETCH_FILTER","popular_movie_data","genre_data","certifications_data","MovieContext","createContext","API_URL","API_KEY","initialState","movieCategories","category","keyword","action","movies","results","genres","certifications","US","displayMovies","MovieProvider","children","console","log","state","dispatch","fetchAPI","url","response","get","type","payload","error","fetchFilter2","urlGenres","urlCertifications","fetchCertifications","api_key","data","fetchFilter","temp_display_movies","tempMovieCategories","forEach","item","useMovieContext"],"mappings":"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","sourcesContent":["import React, { useContext, useReducer, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducer/movie_reducer\";\r\nimport {\r\n  FETCH_TRENDING_MOVIE,\r\n  FETCH_POPULAR_MOVIE,\r\n  FETCH_TOP_RATED_MOVIE,\r\n  FETCH_UPCOMING_MOVIE,\r\n  FETCH_MOVIE_GENRE,\r\n  FETCH_MOVIE_CERTIFICATIONS,\r\n  FETCH_FILTER,\r\n} from \"../constants/action\";\r\nimport popular_movie_data from \"../data/popular_movie_data\";\r\nimport genre_data from \"../data/genre_data\";\r\nimport certifications_data from \"../data/certifications_data\";\r\n\r\nconst MovieContext = React.createContext();\r\nconst API_URL = \"https://api.themoviedb.org/3\";\r\nconst API_KEY = \"d60f4e8797f13dd4c61d8414708bb669\";\r\n\r\nconst initialState = {\r\n  movieCategories: [\r\n    {\r\n      category: \"Trending\",\r\n      keyword: \"/trending/movie/day\",\r\n      action: FETCH_TRENDING_MOVIE,\r\n      movies: popular_movie_data.results,\r\n    },\r\n    {\r\n      category: \"Popular\",\r\n      keyword: \"/movie/popular\",\r\n      action: FETCH_POPULAR_MOVIE,\r\n      movies: popular_movie_data.results,\r\n    },\r\n    {\r\n      category: \"Top Rated\",\r\n      keyword: \"/movie/top_rated\",\r\n      action: FETCH_TOP_RATED_MOVIE,\r\n      movies: popular_movie_data.results,\r\n    },\r\n    {\r\n      category: \"Upcoming\",\r\n      keyword: \"/movie/upcoming\",\r\n      action: FETCH_UPCOMING_MOVIE,\r\n      movies: popular_movie_data.results,\r\n    },\r\n  ],\r\n  // {id,name}\r\n  genres: genre_data.genres,\r\n  certifications: certifications_data.certifications.US,\r\n  displayMovies: [],\r\n};\r\n\r\nexport const MovieProvider = ({ children }) => {\r\n  console.log(genre_data.genres);\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const fetchAPI = async (action, url) => {\r\n    try {\r\n      const response = await axios.get(url);\r\n      dispatch({ type: action, payload: response });\r\n    } catch (error) {}\r\n  };\r\n\r\n  const fetchFilter2 = async () => {\r\n    // https://api.themoviedb.org/3/genre/movie/list?api_key=<<api_key>>&language=en-US\r\n    const urlGenres = `${API_URL}/genre/movie/list?api_key=${API_KEY}&language=en-US`;\r\n    // https://api.themoviedb.org/3/certification/movie/list?api_key=<<api_key>>\r\n    const urlCertifications = `${API_URL}/certification/movie/list?api_key=${API_KEY}`;\r\n    fetchAPI(FETCH_MOVIE_GENRE, urlGenres);\r\n    fetchAPI(FETCH_MOVIE_CERTIFICATIONS, urlCertifications);\r\n  };\r\n\r\n  const fetchCertifications = async () => {\r\n    try {\r\n      const url = `https://api.themoviedb.org/3/certification/movie/list?api_key=${state.api_key}`;\r\n      const response = await axios.get(url);\r\n      console.log(response);\r\n      const certifications = response.data.certifications.US;\r\n      dispatch({ type: FETCH_MOVIE_CERTIFICATIONS, payload: certifications });\r\n    } catch (error) {}\r\n  };\r\n\r\n  const fetchFilter = async (url) => {\r\n    try {\r\n      // const response = await axios.get(url);\r\n      // const temp_display_movies = response.data.results;\r\n      const temp_display_movies = popular_movie_data.results;\r\n      dispatch({ type: FETCH_FILTER, payload: temp_display_movies });\r\n    } catch (error) {}\r\n  };\r\n\r\n  // Fetch Home Page Content\r\n  // i.e. The 4 categories\r\n  useEffect(() => {\r\n    const tempMovieCategories = state.movieCategories;\r\n    tempMovieCategories.forEach((item) => {\r\n      const action = item.action;\r\n      const url = `${API_URL}${item.keyword}?api_key=${API_KEY}&language=en-US&page=1`;\r\n      //fetchAPI(action, url);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <MovieContext.Provider value={{ ...state, fetchFilter2, fetchFilter }}>\r\n      {children}\r\n    </MovieContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useMovieContext = () => {\r\n  return useContext(MovieContext);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}