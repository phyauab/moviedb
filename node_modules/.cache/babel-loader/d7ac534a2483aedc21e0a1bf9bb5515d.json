{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clement\\\\Desktop\\\\Programming\\\\Projects\\\\Web\\\\moviedb\\\\src\\\\context\\\\movie_context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\nimport reducer from \"../reducer/movie_reducer\";\nimport { FETCH_TRENDING_MOVIE, FETCH_POPULAR_MOVIE, FETCH_TOP_RATED_MOVIE, FETCH_UPCOMING_MOVIE, FETCH_MOVIE_GENRE, FETCH_MOVIE_CERTIFICATIONS } from \"../constants/action\";\nimport popular_movie_data from \"../data/popular_movie_data\";\nimport genre_data from \"../data/genre_data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieContext = /*#__PURE__*/React.createContext();\nconst initialState = {\n  api_url: \"https://api.themoviedb.org/3\",\n  api_key: \"d60f4e8797f13dd4c61d8414708bb669\",\n  movie_arr: [{\n    category: \"Trending\",\n    keyword: \"/trending/movie/day\",\n    action: FETCH_TRENDING_MOVIE,\n    movies: popular_movie_data.results\n  }, {\n    category: \"Popular\",\n    keyword: \"/movie/popular\",\n    action: FETCH_POPULAR_MOVIE,\n    movies: popular_movie_data.results\n  }, {\n    category: \"Top Rated\",\n    keyword: \"/movie/top_rated\",\n    action: FETCH_TOP_RATED_MOVIE,\n    movies: popular_movie_data.results\n  }, {\n    category: \"Upcoming\",\n    keyword: \"/movie/upcoming\",\n    action: FETCH_UPCOMING_MOVIE,\n    movies: popular_movie_data.results\n  }],\n  // {id,name}\n  genres: [],\n  certifications: [],\n  display_movies: []\n};\nexport const MovieProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const fetchMovie = async (action, url) => {\n    try {\n      // const response = await axios.get(url);\n      // const movies = response.data.results;\n      const movies = popular_movie_data.results;\n      dispatch({\n        type: action,\n        payload: movies\n      });\n    } catch (error) {}\n  };\n\n  const fetchGenre = async () => {\n    try {\n      const url = `https://api.themoviedb.org/3/genre/movie/list?api_key=${state.api_key}&language=en-US`; // const response = await axios.get(url);\n      // const genres = response.data.genres;\n\n      const genres = genre_data.genres; //console.log(genres);\n\n      dispatch({\n        type: FETCH_MOVIE_GENRE,\n        payload: genres\n      });\n    } catch (error) {}\n  };\n\n  const fetchCertifications = async () => {\n    try {\n      const url = `https://api.themoviedb.org/3/certification/movie/list?api_key=${state.api_key}`;\n      const response = await axios.get(url);\n      console.log(response);\n      const certifications = response.data.certifications.US;\n      dispatch({\n        type: FETCH_MOVIE_CERTIFICATIONS,\n        payload: certifications\n      });\n    } catch (error) {}\n  };\n\n  const fetchFilter = async url => {\n    try {\n      const response = await axios.get(url);\n      console.log(response);\n      const temp_display_movies = response.data;\n    } catch (error) {}\n  }; // Fetch Movie of different categories\n\n\n  useEffect(() => {\n    const list = state.movie_arr;\n    list.forEach(item => {\n      const action = item.action;\n      const url = `${state.api_url}${item.keyword}?api_key=${state.api_key}&language=en-US&page=1`;\n      fetchMovie(action, url);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MovieContext.Provider, {\n    value: { ...state,\n      fetchGenre,\n      fetchCertifications,\n      fetchFilter\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = MovieProvider;\nexport const useMovieContext = () => {\n  _s2();\n\n  return useContext(MovieContext);\n};\n\n_s2(useMovieContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieProvider\");","map":{"version":3,"sources":["C:/Users/clement/Desktop/Programming/Projects/Web/moviedb/src/context/movie_context.js"],"names":["React","useContext","useReducer","useEffect","axios","reducer","FETCH_TRENDING_MOVIE","FETCH_POPULAR_MOVIE","FETCH_TOP_RATED_MOVIE","FETCH_UPCOMING_MOVIE","FETCH_MOVIE_GENRE","FETCH_MOVIE_CERTIFICATIONS","popular_movie_data","genre_data","MovieContext","createContext","initialState","api_url","api_key","movie_arr","category","keyword","action","movies","results","genres","certifications","display_movies","MovieProvider","children","state","dispatch","fetchMovie","url","type","payload","error","fetchGenre","fetchCertifications","response","get","console","log","data","US","fetchFilter","temp_display_movies","list","forEach","item","useMovieContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,UAA5B,EAAwCC,SAAxC,QAAyD,OAAzD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SACEC,oBADF,EAEEC,mBAFF,EAGEC,qBAHF,EAIEC,oBAJF,EAKEC,iBALF,EAMEC,0BANF,QAOO,qBAPP;AAQA,OAAOC,kBAAP,MAA+B,4BAA/B;AACA,OAAOC,UAAP,MAAuB,oBAAvB;;AAEA,MAAMC,YAAY,gBAAGd,KAAK,CAACe,aAAN,EAArB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,8BADU;AAEnBC,EAAAA,OAAO,EAAE,kCAFU;AAGnBC,EAAAA,SAAS,EAAE,CACT;AACEC,IAAAA,QAAQ,EAAE,UADZ;AAEEC,IAAAA,OAAO,EAAE,qBAFX;AAGEC,IAAAA,MAAM,EAAEhB,oBAHV;AAIEiB,IAAAA,MAAM,EAAEX,kBAAkB,CAACY;AAJ7B,GADS,EAOT;AACEJ,IAAAA,QAAQ,EAAE,SADZ;AAEEC,IAAAA,OAAO,EAAE,gBAFX;AAGEC,IAAAA,MAAM,EAAEf,mBAHV;AAIEgB,IAAAA,MAAM,EAAEX,kBAAkB,CAACY;AAJ7B,GAPS,EAaT;AACEJ,IAAAA,QAAQ,EAAE,WADZ;AAEEC,IAAAA,OAAO,EAAE,kBAFX;AAGEC,IAAAA,MAAM,EAAEd,qBAHV;AAIEe,IAAAA,MAAM,EAAEX,kBAAkB,CAACY;AAJ7B,GAbS,EAmBT;AACEJ,IAAAA,QAAQ,EAAE,UADZ;AAEEC,IAAAA,OAAO,EAAE,iBAFX;AAGEC,IAAAA,MAAM,EAAEb,oBAHV;AAIEc,IAAAA,MAAM,EAAEX,kBAAkB,CAACY;AAJ7B,GAnBS,CAHQ;AA6BnB;AACAC,EAAAA,MAAM,EAAE,EA9BW;AA+BnBC,EAAAA,cAAc,EAAE,EA/BG;AAgCnBC,EAAAA,cAAc,EAAE;AAhCG,CAArB;AAmCA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC7C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB7B,UAAU,CAACG,OAAD,EAAUW,YAAV,CAApC;;AAEA,QAAMgB,UAAU,GAAG,OAAOV,MAAP,EAAeW,GAAf,KAAuB;AACxC,QAAI;AACF;AACA;AACA,YAAMV,MAAM,GAAGX,kBAAkB,CAACY,OAAlC;AACAO,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEZ,MAAR;AAAgBa,QAAAA,OAAO,EAAEZ;AAAzB,OAAD,CAAR;AACD,KALD,CAKE,OAAOa,KAAP,EAAc,CAAE;AACnB,GAPD;;AASA,QAAMC,UAAU,GAAG,YAAY;AAC7B,QAAI;AACF,YAAMJ,GAAG,GAAI,yDAAwDH,KAAK,CAACZ,OAAQ,iBAAnF,CADE,CAEF;AACA;;AACA,YAAMO,MAAM,GAAGZ,UAAU,CAACY,MAA1B,CAJE,CAKF;;AACAM,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAExB,iBAAR;AAA2ByB,QAAAA,OAAO,EAAEV;AAApC,OAAD,CAAR;AACD,KAPD,CAOE,OAAOW,KAAP,EAAc,CAAE;AACnB,GATD;;AAWA,QAAME,mBAAmB,GAAG,YAAY;AACtC,QAAI;AACF,YAAML,GAAG,GAAI,iEAAgEH,KAAK,CAACZ,OAAQ,EAA3F;AACA,YAAMqB,QAAQ,GAAG,MAAMnC,KAAK,CAACoC,GAAN,CAAUP,GAAV,CAAvB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,YAAMb,cAAc,GAAGa,QAAQ,CAACI,IAAT,CAAcjB,cAAd,CAA6BkB,EAApD;AACAb,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEvB,0BAAR;AAAoCwB,QAAAA,OAAO,EAAET;AAA7C,OAAD,CAAR;AACD,KAND,CAME,OAAOU,KAAP,EAAc,CAAE;AACnB,GARD;;AAUA,QAAMS,WAAW,GAAG,MAAOZ,GAAP,IAAe;AACjC,QAAI;AACF,YAAMM,QAAQ,GAAG,MAAMnC,KAAK,CAACoC,GAAN,CAAUP,GAAV,CAAvB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,YAAMO,mBAAmB,GAAGP,QAAQ,CAACI,IAArC;AACD,KAJD,CAIE,OAAOP,KAAP,EAAc,CAAE;AACnB,GAND,CAjC6C,CAyC7C;;;AACAjC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM4C,IAAI,GAAGjB,KAAK,CAACX,SAAnB;AACA4B,IAAAA,IAAI,CAACC,OAAL,CAAcC,IAAD,IAAU;AACrB,YAAM3B,MAAM,GAAG2B,IAAI,CAAC3B,MAApB;AACA,YAAMW,GAAG,GAAI,GAAEH,KAAK,CAACb,OAAQ,GAAEgC,IAAI,CAAC5B,OAAQ,YAAWS,KAAK,CAACZ,OAAQ,wBAArE;AACAc,MAAAA,UAAU,CAACV,MAAD,EAASW,GAAT,CAAV;AACD,KAJD;AAKD,GAPQ,EAON,EAPM,CAAT;AASA,sBACE,QAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE,EAAE,GAAGH,KAAL;AAAYO,MAAAA,UAAZ;AAAwBC,MAAAA,mBAAxB;AAA6CO,MAAAA;AAA7C,KADT;AAAA,cAGGhB;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA1DM;;GAAMD,a;;KAAAA,a;AA4Db,OAAO,MAAMsB,eAAe,GAAG,MAAM;AAAA;;AACnC,SAAOjD,UAAU,CAACa,YAAD,CAAjB;AACD,CAFM;;IAAMoC,e","sourcesContent":["import React, { useContext, useReducer, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducer/movie_reducer\";\r\nimport {\r\n  FETCH_TRENDING_MOVIE,\r\n  FETCH_POPULAR_MOVIE,\r\n  FETCH_TOP_RATED_MOVIE,\r\n  FETCH_UPCOMING_MOVIE,\r\n  FETCH_MOVIE_GENRE,\r\n  FETCH_MOVIE_CERTIFICATIONS,\r\n} from \"../constants/action\";\r\nimport popular_movie_data from \"../data/popular_movie_data\";\r\nimport genre_data from \"../data/genre_data\";\r\n\r\nconst MovieContext = React.createContext();\r\n\r\nconst initialState = {\r\n  api_url: \"https://api.themoviedb.org/3\",\r\n  api_key: \"d60f4e8797f13dd4c61d8414708bb669\",\r\n  movie_arr: [\r\n    {\r\n      category: \"Trending\",\r\n      keyword: \"/trending/movie/day\",\r\n      action: FETCH_TRENDING_MOVIE,\r\n      movies: popular_movie_data.results,\r\n    },\r\n    {\r\n      category: \"Popular\",\r\n      keyword: \"/movie/popular\",\r\n      action: FETCH_POPULAR_MOVIE,\r\n      movies: popular_movie_data.results,\r\n    },\r\n    {\r\n      category: \"Top Rated\",\r\n      keyword: \"/movie/top_rated\",\r\n      action: FETCH_TOP_RATED_MOVIE,\r\n      movies: popular_movie_data.results,\r\n    },\r\n    {\r\n      category: \"Upcoming\",\r\n      keyword: \"/movie/upcoming\",\r\n      action: FETCH_UPCOMING_MOVIE,\r\n      movies: popular_movie_data.results,\r\n    },\r\n  ],\r\n  // {id,name}\r\n  genres: [],\r\n  certifications: [],\r\n  display_movies: [],\r\n};\r\n\r\nexport const MovieProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const fetchMovie = async (action, url) => {\r\n    try {\r\n      // const response = await axios.get(url);\r\n      // const movies = response.data.results;\r\n      const movies = popular_movie_data.results;\r\n      dispatch({ type: action, payload: movies });\r\n    } catch (error) {}\r\n  };\r\n\r\n  const fetchGenre = async () => {\r\n    try {\r\n      const url = `https://api.themoviedb.org/3/genre/movie/list?api_key=${state.api_key}&language=en-US`;\r\n      // const response = await axios.get(url);\r\n      // const genres = response.data.genres;\r\n      const genres = genre_data.genres;\r\n      //console.log(genres);\r\n      dispatch({ type: FETCH_MOVIE_GENRE, payload: genres });\r\n    } catch (error) {}\r\n  };\r\n\r\n  const fetchCertifications = async () => {\r\n    try {\r\n      const url = `https://api.themoviedb.org/3/certification/movie/list?api_key=${state.api_key}`;\r\n      const response = await axios.get(url);\r\n      console.log(response);\r\n      const certifications = response.data.certifications.US;\r\n      dispatch({ type: FETCH_MOVIE_CERTIFICATIONS, payload: certifications });\r\n    } catch (error) {}\r\n  };\r\n\r\n  const fetchFilter = async (url) => {\r\n    try {\r\n      const response = await axios.get(url);\r\n      console.log(response);\r\n      const temp_display_movies = response.data;\r\n    } catch (error) {}\r\n  };\r\n\r\n  // Fetch Movie of different categories\r\n  useEffect(() => {\r\n    const list = state.movie_arr;\r\n    list.forEach((item) => {\r\n      const action = item.action;\r\n      const url = `${state.api_url}${item.keyword}?api_key=${state.api_key}&language=en-US&page=1`;\r\n      fetchMovie(action, url);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <MovieContext.Provider\r\n      value={{ ...state, fetchGenre, fetchCertifications, fetchFilter }}\r\n    >\r\n      {children}\r\n    </MovieContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useMovieContext = () => {\r\n  return useContext(MovieContext);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}